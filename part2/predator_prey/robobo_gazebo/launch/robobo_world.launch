<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" value="true" />

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find robobo_gazebo)/worlds/robobo.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="verbose" value="true" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <group ns="/prey">

      <!-- Load the URDF into the ROS Parameter Server -->
      <param name="robot_description"
        command="$(find xacro)/xacro --inorder '$(find robobo_description)/urdf/robobo.xacro' body_color:=Gazebo/Green model_name:=prey" />

      <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model prey -param robot_description -x 0 -y 0 -z 0.03">
      </node>
      
      <!--<include file="$(find robobo_control)/launch/robobo_control.launch">
        <arg name="model_name" value="prey"/>
      </include>-->
      
  </group>
    
  <group ns="/predator0">

      <!-- Load the URDF into the ROS Parameter Server -->
      <param name="robot_description"
        command="$(find xacro)/xacro --inorder '$(find robobo_description)/urdf/robobo.xacro' body_color:=Gazebo/Red model_name:=predator0" />

      <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model predator0 -param robot_description -x -1 -y -1.5 -z 0.03"/>
        
  </group>
  
  <group ns="/predator1">

      <!-- Load the URDF into the ROS Parameter Server -->
      <param name="robot_description"
        command="$(find xacro)/xacro --inorder '$(find robobo_description)/urdf/robobo.xacro' body_color:=Gazebo/Red model_name:=predator1" />

      <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model predator1 -param robot_description -x 0 -y -1.5 -z 0.03"/>
        
  </group>
  
  <group ns="/predator2">

      <!-- Load the URDF into the ROS Parameter Server -->
      <param name="robot_description"
        command="$(find xacro)/xacro --inorder '$(find robobo_description)/urdf/robobo.xacro' body_color:=Gazebo/Red model_name:=predator2" />

      <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model predator2 -param robot_description -x 1 -y -1.5 -z 0.03"/>
        
  </group>

  <node pkg="rosservice" type="rosservice" name="robobo_simulation_service" args="call --wait /robobo_simulation_service" />

  <!-- ros_control robobo launch file -->
  <!--include file="$(find robobo_control)/launch/robobo_control.launch" /-->

</launch>
